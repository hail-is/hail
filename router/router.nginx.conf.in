server {
    server_name @domain@ www.*;

    location = /healthcheck {
      return 204;
    }

    location / {
        proxy_pass https://website/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
}

server {
    server_name scorecard.*;

    location / {
        proxy_pass https://scorecard/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name benchmark.*;

    location / {
        proxy_pass https://benchmark/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name monitoring.*;

    location / {
        proxy_pass https://monitoring/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name ci.*;

    location / {
        proxy_pass https://ci/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name hello.*;

    location / {
        proxy_pass http://hello/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name batch.*;
    client_max_body_size 8m;

    location / {
        proxy_pass https://batch/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name batch-driver.*;

    location / {
        proxy_pass https://batch-driver/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name grafana.*;

    location / {
        proxy_pass https://grafana/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name prometheus.*;

    location / {
        proxy_pass https://prometheus/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name notebook.*;

    # needed to correctly handle error_page with internal handles
    recursive_error_pages on;

    location = /auth {
        internal;
        proxy_pass https://notebook@notebook_base_path@/auth/$notebook_token;
    }

    location ~ @notebook_base_path@/instance/([^/]+)/(.*) {
        set $notebook_token $1;
        auth_request /auth;
        auth_request_set $auth_pod_ip $upstream_http_pod_ip;

        proxy_pass http://$auth_pod_ip$request_uri;

        include /etc/nginx/proxy.conf;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;

        proxy_connect_timeout 5s;

        proxy_intercept_errors on;
        error_page 401 403 502 504 = @error;
    }

    location @error {
      return 302 $updated_scheme://$updated_host@notebook_base_path@/error;
    }

    location / {
        proxy_pass https://notebook;

        # don't set Host, notebook dispatches off domain
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host  $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP         $http_x_real_ip;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name workshop.*;

    # needed to correctly handle error_page with internal handles
    recursive_error_pages on;

    location = /auth {
        internal;
        proxy_pass https://workshop@workshop_base_path@/auth/$notebook_token;
    }

    location ~ @workshop_base_path@/instance/([^/]+)/(.*) {
        set $notebook_token $1;
        auth_request /auth;
        auth_request_set $auth_pod_ip $upstream_http_pod_ip;

        proxy_pass http://$auth_pod_ip$request_uri;

        include /etc/nginx/proxy.conf;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;

        proxy_connect_timeout 5s;

        proxy_intercept_errors on;
        error_page 401 403 502 504 = @error;
    }

    location @error {
      return 302 $updated_scheme://$updated_host@workshop_base_path@/error;
    }

    location / {
        proxy_pass https://workshop;

        # don't set Host, notebook dispatches off domain
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host  $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP         $http_x_real_ip;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name auth.*;

    location / {
        proxy_pass https://auth/;
        include /etc/nginx/proxy.conf;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name query.*;

    location / {
        proxy_pass https://query/;
        include /etc/nginx/proxy.conf;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name memory.*;

    location / {
        proxy_pass https://memory/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name blog.*;
    client_max_body_size 8m;

    location / {
        proxy_pass https://blog/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}


server {
    server_name address.*;
    client_max_body_size 8m;

    location / {
        proxy_pass https://address/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

server {
    server_name atgu.*;
    client_max_body_size 8m;

    location / {
        proxy_pass https://atgu/;
        include /etc/nginx/proxy.conf;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
}

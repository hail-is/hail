FROM {{ hail_ubuntu_image.image }}

RUN hail-pip-install pyspark==3.1.1
ENV SPARK_HOME /usr/local/lib/python3.7/dist-packages/pyspark
ENV PATH "$PATH:$SPARK_HOME/sbin:$SPARK_HOME/bin"
ENV PYSPARK_PYTHON python3

# source: https://cloud.google.com/storage/docs/gsutil_install#linux
RUN curl --remote-name https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-334.0.0-linux-x86_64.tar.gz && \
    tar -xf google-cloud-sdk-334.0.0-linux-x86_64.tar.gz && \
    curl --remote-name https://dl.k8s.io/release/v1.19.7/bin/linux/amd64/kubectl && \
    install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
ENV PATH $PATH:/google-cloud-sdk/bin

RUN hail-apt-get-install \
    git \
    htop \
    unzip bzip2 zip tar \
    wget curl \
    rsync \
    emacs-nox \
    xsltproc pandoc \
    jq \
    openjdk-8-jdk-headless \
    liblapack3 \
    g++-10 \
    gcc-10 \
    cmake \
    && \
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 10 && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 10

# https://bugs.mysql.com/bug.php?id=105288&thanks=sub
RUN hail-apt-get-install xz-utils libncurses5 && \
    curl --remote-name https://downloads.mysql.com/archives/get/p/23/file/mysql-8.0.26-linux-glibc2.17-x86_64-minimal-rebuild.tar.xz && \
    mkdir -p /opt && \
    tar -vx -C /opt -f mysql-8.0.26-linux-glibc2.17-x86_64-minimal-rebuild.tar.xz && \
    ln -s /opt/mysql-8.0.26-linux-glibc2.17-x86_64-minimal-rebuild/bin/* /usr/bin/

# Regarding explicitly selecting 2.0.1: https://github.com/hail-is/hail/issues/8343
RUN wget -nv -O ${SPARK_HOME}/jars/gcs-connector-hadoop2-2.0.1.jar https://storage.googleapis.com/hadoop-lib/gcs/gcs-connector-hadoop2-2.0.1.jar
COPY docker/core-site.xml ${SPARK_HOME}/conf/core-site.xml

RUN git clone https://github.com/catchorg/Catch2.git --depth 1 --branch v2.13.3 && \
  cd Catch2 && \
  cmake -Bbuild -H. -DBUILD_TESTING=OFF && \
  cmake --build build/ --target install && \
  cd .. && \
  rm -rf Catch2

COPY docker/requirements.txt .
RUN hail-pip-install -r requirements.txt

COPY pylintrc setup.cfg /

apiVersion: apps/v1
kind: Deployment
metadata:
  name: batch-driver
  labels:
    app: batch-driver
    hail.is/sha: "{{ code.sha }}"
spec:
  selector:
    matchLabels:
      app: batch-driver
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: batch-driver
        hail.is/sha: "{{ code.sha }}"
        grafanak8sapp: "true"
    spec:
      serviceAccountName: batch
{% if deploy %}
      priorityClassName: production
      nodeSelector:
        preemptible: "false"
{% else %}
      nodeSelector:
        preemptible: "true"
      tolerations:
       - key: preemptible
         value: "true"
{% endif %}
      containers:
      - name: batch-driver
        image: {{ batch_image.image }}
        command:
{% if not deploy %}
         - /controller.sh
{% endif %}
         - python3
         - -m
         - batch.driver
        resources:
          requests:
            cpu: "600m"
            memory: "2G"
          limits:
            cpu: "1"
            memory: "2.5G"
        env:
         - name: HAIL_DOMAIN
           value: "{{ global.domain }}"
         - name: HAIL_DEPLOY_CONFIG_FILE
           value: /deploy-config/deploy-config.json
         - name: HAIL_BATCH_WORKER_IMAGE
           value: "{{ batch_worker_image.image }}"
         - name: HAIL_DEFAULT_NAMESPACE
           value: "{{ default_ns.name }}"
         - name: PROJECT
           value: "{{ global.project }}"
         - name: HAIL_DOCKER_ROOT_IMAGE
           value: "{{ global.docker_root_image }}"
         - name: HAIL_DOCKER_PREFIX
           value: "{{ global.docker_prefix }}"
         - name: HAIL_GCP_REGION
           valueFrom:
             secretKeyRef:
               name: global-config
               key: gcp_region
         - name: HAIL_GCP_ZONE
           valueFrom:
             secretKeyRef:
               name: global-config
               key: gcp_zone
         - name: HAIL_BATCH_GCP_REGIONS
           valueFrom:
             secretKeyRef:
               name: global-config
               key: batch_gcp_regions
         - name: KUBERNETES_SERVER_URL
           value: "{{ global.k8s_server_url }}"
         - name: HAIL_SHA
           value: "{{ code.sha }}"
{% if scope != "test" %}
         - name: HAIL_SHOULD_PROFILE
           value: "1"
{% endif %}
         - name: HAIL_SCOPE
           value: "{{ scope }}"
{% if deploy %}
         - name: HAIL_BATCH_BUCKET_NAME
           valueFrom:
             secretKeyRef:
               name: global-config
               key: batch_logs_bucket
         - name: STANDING_WORKER_MAX_IDLE_TIME_SECS
           value: "7200" # 2 hours
{% else %}
         - name: HAIL_SHOULD_CHECK_INVARIANTS
           value: "1"
         - name: HAIL_BATCH_BUCKET_NAME
           value: hail-test-dmk9z
         - name: STANDING_WORKER_MAX_IDLE_TIME_SECS
           value: "300"
{% endif %}
        ports:
         - containerPort: 5000
        volumeMounts:
         - name: deploy-config
           mountPath: /deploy-config
           readOnly: true
         - name: session-secret-key
           mountPath: /session-secret-key
           readOnly: true
         - name: sql-config
           mountPath: /sql-config
           readOnly: true
         - name: gsa-key
           mountPath: /gsa-key
           readOnly: true
         - name: ssl-config-batch-driver
           mountPath: /ssl-config
           readOnly: true
        readinessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
       - name: deploy-config
         secret:
           secretName: deploy-config
       - name: session-secret-key
         secret:
           secretName: session-secret-key
       - name: sql-config
         secret:
           secretName: "{{ batch_database.user_secret_name }}"
       - name: gsa-key
         secret:
           secretName: batch-gsa-key
       - name: ssl-config-batch-driver
         secret:
           optional: false
           secretName: ssl-config-batch-driver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: batch
  labels:
    app: batch
    hail.is/sha: "{{ code.sha }}"
spec:
  selector:
    matchLabels:
      app: batch
  replicas: 3
  template:
    metadata:
      labels:
        app: batch
        hail.is/sha: "{{ code.sha }}"
        grafanak8sapp: "true"
    spec:
{% if deploy %}
      priorityClassName: production
{% endif %}
      nodeSelector:
        preemptible: "true"
      tolerations:
       - key: preemptible
         value: "true"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - batch
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: batch
        image: {{ batch_image.image }}
        command:
{% if not deploy %}
         - /controller.sh
{% endif %}
         - python3
         - -m
         - batch.front_end
        env:
         - name: HAIL_DOMAIN
           value: "{{ global.domain }}"
         - name: HAIL_DEPLOY_CONFIG_FILE
           value: /deploy-config/deploy-config.json
         - name: HAIL_DEFAULT_NAMESPACE
           value: "{{ default_ns.name }}"
         - name: PROJECT
           value: "{{ global.project }}"
         - name: HAIL_DOCKER_ROOT_IMAGE
           value: "{{ global.docker_root_image }}"
         - name: HAIL_DOCKER_PREFIX
           value: "{{ global.docker_prefix }}"
         - name: HAIL_GCP_REGION
           valueFrom:
             secretKeyRef:
               name: global-config
               key: gcp_region
         - name: HAIL_GCP_ZONE
           valueFrom:
             secretKeyRef:
               name: global-config
               key: gcp_zone
         - name: HAIL_BATCH_GCP_REGIONS
           valueFrom:
             secretKeyRef:
               name: global-config
               key: batch_gcp_regions
         - name: KUBERNETES_SERVER_URL
           value: "{{ global.k8s_server_url }}"
         - name: HAIL_SHA
           value: "{{ code.sha }}"
         - name: HAIL_SCOPE
           value: "{{ scope }}"
{% if deploy %}
         - name: HAIL_BATCH_BUCKET_NAME
           valueFrom:
             secretKeyRef:
               name: global-config
               key: batch_logs_bucket
         - name: STANDING_WORKER_MAX_IDLE_TIME_SECS
           value: "7200" # 2 hours
{% else %}
         - name: HAIL_BATCH_BUCKET_NAME
           value: hail-test-dmk9z
         - name: STANDING_WORKER_MAX_IDLE_TIME_SECS
           value: "300"
{% endif %}
        ports:
         - containerPort: 5000
        resources:
          requests:
            cpu: "20m"
            memory: "20M"
          limits:
            cpu: "1"
            memory: "1G"
        volumeMounts:
         - name: deploy-config
           mountPath: /deploy-config
           readOnly: true
         - name: session-secret-key
           mountPath: /session-secret-key
           readOnly: true
         - name: sql-config
           mountPath: /sql-config
           readOnly: true
         - name: gsa-key
           mountPath: /gsa-key
           readOnly: true
         - name: ssl-config-batch
           mountPath: /ssl-config
           readOnly: true
        readinessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
       - name: deploy-config
         secret:
           secretName: deploy-config
       - name: session-secret-key
         secret:
           secretName: session-secret-key
       - name: sql-config
         secret:
           secretName: "{{ batch_database.user_secret_name }}"
       - name: gsa-key
         secret:
           secretName: batch-gsa-key
       - name: ssl-config-batch
         secret:
           optional: false
           secretName: ssl-config-batch
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: batch
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: batch
  minReplicas: 3
  maxReplicas: 10
  metrics:
   - type: Resource
     resource:
       name: cpu
       targetAverageUtilization: 80
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: batch
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: batch
---
apiVersion: v1
kind: Service
metadata:
  name: batch
  labels:
    app: batch
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 5000
  selector:
    app: batch
---
apiVersion: v1
kind: Service
metadata:
  name: batch-driver
  labels:
    app: batch-driver
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 5000
  selector:
    app: batch-driver

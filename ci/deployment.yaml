apiVersion: apps/v1
kind: Deployment
metadata:
  name: ci
  labels:
    app: ci
    hail.is/sha: "{{ code.sha }}"
spec:
  selector:
    matchLabels:
      app: ci
  replicas: 1
  template:
    metadata:
      labels:
        app: ci
        hail.is/sha: "{{ code.sha }}"
        grafanak8sapp: "true"
    spec:
{% if deploy %}
      priorityClassName: production
{% endif %}
      nodeSelector:
        preemptible: "false"
      containers:
        - name: ci
          command:
{% if not deploy %}
           - /controller.sh
{% endif %}
           - "python3"
           - "-m"
           - "ci"
          image: "{{ ci_image.image }}"
          resources:
            requests:
              cpu: "100m"
              memory: "200M"
            limits:
              cpu: "1"
              memory: "1G"
          env:
           - name: HAIL_DEPLOY_CONFIG_FILE
             value: /deploy-config/deploy-config.json
           - name: HAIL_WATCHED_BRANCHES
             value: '[]'
           - name: HAIL_GCP_PROJECT
             value: "{{ global.project }}"
           - name: HAIL_GCP_ZONE
             value: "{{ global.zone }}"
           - name: HAIL_DOCKER_PREFIX
             value: "{{ global.docker_prefix }}"
           - name: HAIL_DOCKER_ROOT_IMAGE
             value: "{{ global.docker_root_image }}"
           - name: HAIL_CI_UTILS_IMAGE
             value: "{{ ci_utils_image.image }}"
           - name: HAIL_IP
             value: "{{ global.ip }}"
           - name: HAIL_DOMAIN
             value: "{{ global.domain }}"
           - name: HAIL_DEFAULT_NAMESPACE
             value: "{{ default_ns.name }}"
           - name: KUBERNETES_SERVER_URL
             value: "{{ global.k8s_server_url }}"
           - name: HAIL_CI_BUCKET_NAME
{% if deploy %}
             value: "cpg-hail-ci"
{% else %}
             value: "cpg-hail-test"
{% endif %}
          ports:
            - containerPort: 5000
          volumeMounts:
           - mountPath: /deploy-config
             name: deploy-config
             readOnly: true
           - name: session-secret-key
             mountPath: /session-secret-key
             readOnly: true
           - mountPath: /user-tokens
             name: ci-tokens
             readOnly: true
           - name: ssl-config-ci
             mountPath: /ssl-config
             readOnly: true
          livenessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
       - name: deploy-config
         secret:
           secretName: deploy-config
       - name: session-secret-key
         secret:
           optional: false
           secretName: session-secret-key
       - name: ci-tokens
         secret:
           secretName: ci-tokens
       - name: ssl-config-ci
         secret:
           optional: false
           secretName: ssl-config-ci

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

map $http_x_forwarded_proto $updated_scheme {
     default $http_x_forwarded_proto;
     '' $scheme;
}

limit_req_zone global zone=limit:1m rate=10r/s;

server {
    server_name internal.hail;
    client_max_body_size 50m;
    listen 80;
    listen [::]:80;

    location ~ ^/([^/]+)/([^/]+) {
    	limit_req zone=limit burst=20 nodelay;

        set $namespace $1;
        set $service $2;

        resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass https://$service.$namespace.svc.cluster.local;

        proxy_set_header Host $service.internal;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $updated_scheme;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # we do not verify namespaced services
        # include /ssl-config/ssl-config-proxy.conf;
    }
}

server {
    server_name ~^(?<service>[\w-]+)\.hail$;
    client_max_body_size 50m;
    listen 80 default_server;
    listen [::]:80 default_server;

    location / {
    	limit_req zone=limit burst=20 nodelay;

        resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass https://$service.default.svc.cluster.local;

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $updated_scheme;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        include /ssl-config/ssl-config-proxy.conf;
    }
}

server {
    server_name internal.hail;
    client_max_body_size 50m;
    listen 443 ssl;
    listen [::]:443 ssl;

    location ~ ^/([^/]+)/([^/]+) {
        limit_req zone=limit burst=20 nodelay;

        set $namespace $1;
        set $service $2;

        resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass https://$service.$namespace.svc.cluster.local;

        proxy_set_header Host $service.internal;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $updated_scheme;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # we do not verify namespaced services
        # include /ssl-config/ssl-config-proxy.conf;
    }
}

server {
    server_name ~^(?<service>[\w-]+)\.hail$;
    client_max_body_size 50m;
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;

    location / {
        limit_req zone=limit burst=20 nodelay;

        resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass https://$service.default.svc.cluster.local;

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $updated_scheme;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        include /ssl-config/ssl-config-proxy.conf;
    }
}

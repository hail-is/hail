apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-driver
  labels:
    app: auth-driver
    hail.is/sha: "{{ code.sha }}"
spec:
  selector:
    matchLabels:
      app: auth-driver
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: auth-driver
        hail.is/sha: "{{ code.sha }}"
        grafanak8sapp: "true"
    spec:
      serviceAccountName: auth-driver
{% if deploy %}
      priorityClassName: production
{% endif %}
      nodeSelector:
        preemptible: "true"
      tolerations:
       - key: preemptible
         value: "true"
       - key: "kubernetes.azure.com/scalesetpriority"
         value: "spot"
      containers:
       - name: auth-driver
         image: "{{ auth_image.image }}"
         command:
{% if not deploy %}
          - /controller.sh
{% endif %}
          - "python3"
          - -m
          - auth.driver
         env:
          - name: HAIL_DEFAULT_NAMESPACE
            value: "{{ default_ns.name }}"
          - name: HAIL_DEPLOY_CONFIG_FILE
            value: /deploy-config/deploy-config.json
          - name: HAIL_DOMAIN
            valueFrom:
              secretKeyRef:
                name: global-config
                key: domain
          - name: CLOUD
            valueFrom:
              secretKeyRef:
                name: global-config
                key: cloud
          - name: HAIL_SHA
            value: "{{ code.sha }}"
{% if scope != "test" %}
          - name: HAIL_SHOULD_PROFILE
            value: "1"
{% endif %}
         resources:
           requests:
             cpu: "50m"
             memory: "20M"
           limits:
             cpu: "1"
             memory: "1G"
         volumeMounts:
          - name: deploy-config
            mountPath: /deploy-config
            readOnly: true
          - name: global-config
            mountPath: /global-config
            readOnly: true
          - name: database-server-config
            mountPath: /database-server-config
            readOnly: true
          - name: sql-config
            mountPath: /sql-config
            readOnly: true
          - name: gsa-key
            mountPath: /gsa-key
            readOnly: true
          - name: auth-tokens
            mountPath: /user-tokens
            readOnly: true
          - name: ssl-config-auth-driver
            mountPath: /ssl-config
            readOnly: true
         ports:
          - containerPort: 443
      volumes:
       - name: deploy-config
         secret:
           secretName: deploy-config
       - name: global-config
         secret:
           secretName: global-config
       - name: database-server-config
         secret:
           secretName: database-server-config
       - name: sql-config
         secret:
           secretName: "{{ auth_database.user_secret_name }}"
       - name: gsa-key
         secret:
           secretName: auth-gsa-key
       - name: auth-tokens
         secret:
           secretName: auth-tokens
       - name: ssl-config-auth-driver
         secret:
           secretName: ssl-config-auth-driver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  labels:
    app: auth
    hail.is/sha: "{{ code.sha }}"
spec:
  selector:
    matchLabels:
      app: auth
  replicas: 5
  template:
    metadata:
      labels:
        app: auth
        hail.is/sha: "{{ code.sha }}"
        grafanak8sapp: "true"
    spec:
{% if deploy %}
      priorityClassName: production
{% endif %}
      nodeSelector:
        preemptible: "true"
      tolerations:
       - key: preemptible
         value: "true"
       - key: "kubernetes.azure.com/scalesetpriority"
         value: "spot"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - auth
              topologyKey: "kubernetes.io/hostname"
      containers:
       - name: auth
         image: "{{ auth_image.image }}"
         command:
{% if not deploy %}
          - /controller.sh
{% endif %}
          - "python3"
          - -m
          - auth
         env:
          - name: HAIL_DEFAULT_NAMESPACE
            value: "{{ default_ns.name }}"
          - name: HAIL_DEPLOY_CONFIG_FILE
            value: /deploy-config/deploy-config.json
          - name: HAIL_DOMAIN
            valueFrom:
              secretKeyRef:
                name: global-config
                key: domain
          - name: HAIL_ORGANIZATION_DOMAIN
            valueFrom:
              secretKeyRef:
                name: global-config
                key: organization_domain
          - name: CLOUD
            valueFrom:
              secretKeyRef:
                name: global-config
                key: cloud
          - name: HAIL_SHA
            value: "{{ code.sha }}"
{% if scope != "test" %}
          - name: HAIL_SHOULD_PROFILE
            value: "1"
{% endif %}
         resources:
           requests:
             cpu: "20m"
             memory: "20M"
           limits:
             cpu: "1"
             memory: "1G"
         volumeMounts:
          - name: deploy-config
            mountPath: /deploy-config
            readOnly: true
          - name: global-config
            mountPath: /global-config
            readOnly: true
          - name: auth-oauth2-client-secret
            mountPath: /auth-oauth2-client-secret
            readOnly: true
          - name: session-secret-key
            mountPath: /session-secret-key
            readOnly: true
          - name: sql-config
            mountPath: /sql-config
            readOnly: true
          - name: gsa-key
            mountPath: /gsa-key
            readOnly: true
          - name: ssl-config-auth
            mountPath: /ssl-config
            readOnly: true
         ports:
          - containerPort: 443
         readinessProbe:
           tcpSocket:
             port: 443
           initialDelaySeconds: 5
           periodSeconds: 5
      volumes:
       - name: deploy-config
         secret:
           secretName: deploy-config
       - name: global-config
         secret:
           secretName: global-config
       - name: auth-oauth2-client-secret
         secret:
           secretName: auth-oauth2-client-secret
       - name: session-secret-key
         secret:
           secretName: session-secret-key
       - name: sql-config
         secret:
           secretName: "{{ auth_database.user_secret_name }}"
       - name: gsa-key
         secret:
           secretName: auth-gsa-key
       - name: ssl-config-auth
         secret:
           optional: false
           secretName: ssl-config-auth
{% if deploy %}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth
  minReplicas: 3
  maxReplicas: 10
  metrics:
   - type: Resource
     resource:
       name: cpu
       target:
         type: Utilization
         averageUtilization: 2500
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: auth
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: auth
{% endif %}
---
apiVersion: v1
kind: Service
metadata:
  name: auth
  labels:
    app: auth
spec:
  clusterIP: None
  selector:
    app: auth
